version: '3'
services:

  #PHP Service
  app:
    build:
      context: ./
      dockerfile: docker/Dockerfile
    image: digitalocean.com/php
    container_name: app
#    restart: unless-stopped
#    tty: true
    working_dir: /var/www
    volumes:
      - .:/var/www # Share folder container and your source.
#      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/php/upload.ini:/usr/local/etc/php/conf.d/upload.ini
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    working_dir: /var/www
#    restart: unless-stopped
#    tty: true
    ports:
      - 8080:80
#      - "443:443"
    networks:
      - app-network
    volumes:
      - .:/var/www # Share folder container and your source.
      - ./docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
#    restart: unless-stopped
#    tty: true
    volumes:
      - ./docker/mysql_data:/var/lib/mysql
#      - ./docker/mysql_data/my.cnf:/etc/mysql/my.cnf   : # not need.
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
#  app_content: NOT NEED define volumes in app and webserver.
